<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nowcoder.nowcommunity.dao.MessageMapper">
    <sql id="selectFields">
        id,from_id,to_id,conversation_id,content,status,create_time
    </sql>

    <select id="selectConversation" resultType="message">
        select <include refid="selectFields"></include>
        from message
        where id in (
            SELECT max(id) FROM message
            WHERE status != 2
            and from_id != 1
            and (from_id = #{userId} or to_id = #{userId})
            GROUP BY conversation_id
        )
        order by id desc
        limit #{offset},#{limit}
    </select>

    <select id="selectConversationCount" parameterType="int" resultType="int">
        select count(m.conversation_id)
        from (
            select conversation_id
            from `message`
            where status != 2
            and from_id != 1
            and (from_id = #{userId} or to_id = #{userId})
            group by conversation_id
        ) as m
    </select>

    <select id="selectLetters" resultType="message">
        select <include refid="selectFields"></include>
        from `message`
        where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
        order by id desc
        limit #{offset},#{limit}
    </select>

    <select id="selectLetterCount" resultType="int">
        select count(id)
        from `message`
        where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
    </select>

    <select id="selectLetterUnreadCount" resultType="int">
        select count(id)
        from `message`
        where status = 0
        and from_id != 1
        and  to_id = #{userId}
        <if test="conversationId!=null">
           and conversation_id = #{conversationId}
        </if>
    </select>

    <sql id="insertFields">
        from_id,to_id,conversation_id,content,status,create_time
    </sql>
    
    <insert id="insertMessage" parameterType="message">
        insert into message(<include refid="insertFields"></include>)
        values(#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>

    <update id="updateStatus">
        update message set status = #{status}
        where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </update>

</mapper>